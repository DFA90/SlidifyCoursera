(modfit <- train(wage ~ age + jobclass + education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(education, age, jobclass)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age + jobclass + education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(wage)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age + jobclass + education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(education, wage)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age + jobclass + education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(age, wage)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age + jobclass + education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(logwage)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age + jobclass + education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(age)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ jobclass + education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,]
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ jobclass + education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
(modfit <- train(wage ~ education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,]
(modfit <- train(wage ~ age, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(age)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), training$wage), data = NULL) +
geom_point(pch = 19)
(modfit <- train(wage ~ 1, method = "lm", data=training))
(modfit <- train(wage ~ age, method = "lm", data=training))
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(age)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(education)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(jobclass, education)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), training$wage, col = training$jobclass), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), training$wage, col = training$age), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(age, jobclass, education)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), training$wage, col = training$age), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training$age), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training$education), data = NULL) +
geom_point(pch = 19)
names(training)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training$region), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training$logwage), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(logwage)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training$logwage), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(logwage, education)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training$logwage), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(logwage, age)
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training$logwage), data = NULL) +
geom_point(pch = 19)
names(training)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training$year), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training$health), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training$health_ins), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training$race), data = NULL) +
geom_point(pch = 19)
(modfit <- train(wage ~ ., method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training$race), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,]
(modfit <- train(wage ~ ., method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training$race), data = NULL) +
geom_point(pch = 19)
age+jobclass+education
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training$race), data = NULL) +
geom_point(pch = 19)
names(training)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,2]), data = NULL) +
geom_point(pch = 19)
?sort
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,3]), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,4]), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(maritl)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,4]), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,5]), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(race)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,5]), data = NULL) +
geom_point(pch = 19)
names(training)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,6]), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,7]), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,8]), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,9]), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,10]), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,11]), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(wage)
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,11]), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(wage, education)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,11]), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(wage, jobclass)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,11]), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
names(training)
training <- Wage[inTrain,] %>% arrange(wage, year)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(education, year)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(year)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
names(training)
training <- Wage[inTrain,] %>% arrange(age, education)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
qplot(age, wage, data=training)
plot(finMod, 1, pch=19, cex=0.5, col="#00000010")
qplot(finMod$fitted, finMod$residuals, colour=race, data=training)
featurePlot(x=training[,c("age","education","jobclass")],
y = training$wage,
plot="pairs")
pred <- predict(modFit, testing)
qplot(wage,pred,colour=year,data=testing)
pred <- predict(modfit, testing)
qplot(wage,pred,colour=year,data=testing)
inTrain <- createDataPartition(y = Wage$wage, p = 0.7, list = F)
training <- Wage[inTrain,] %>% arrange(age, education)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
pred <- predict(modfit, testing)
qplot(wage,pred,colour=year,data=testing)
modFitAll<- train(wage ~ .,data=training,method="lm")
pred <- predict(modFitAll, testing)
qplot(wage,pred,data=testing)
data(Wage)
Wage <- subset(Wage, select=-c(logwage))
inTrain <- createDataPartition(y = Wage$wage, p = 0.7, list = F)
training <- Wage[inTrain,] %>% arrange(age, education)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
pred <- predict(modfit, testing)
qplot(wage,pred,colour=year,data=testing)
modFitAll<- train(wage ~ .,data=training,method="lm")
pred <- predict(modFitAll, testing)
qplot(wage,pred,data=testing)
qplot(finMod$fitted, finMod$residuals, colour=race, data=training)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(wage)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,]
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
(modfit <- train(wage ~ age+jobclass+education+year, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(wage)
testing <- Wage[-inTrain,]
(modfit <- train(wage ~ age+jobclass+education+year, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
names(training)
(modfit <- train(wage ~ age+jobclass+education+health_ins, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
modFitAll<- train(wage ~ .,data=training,method="lm")
warnings()
modFitAll<- train(wage ~ .,data=Wage,method="lm")
warnings()
modFitAll<- train(wage ~ -region,data=Wage,method="lm")
pred <- predict(modFitAll, testing)
modFitAll<- train(wage ~ .-region,data=Wage,method="lm")
names(training)
modFitAll<- train(wage ~ age+jobclass+education+health_ins+
maritl + race,data=Wage,method="lm")
finModAll <- modFitAll$finalModel
ggplot(aes(1:length(finModAll$residuals), finModAll$residuals), data = NULL) +
geom_point(pch = 19)
modFitAll<- train(wage ~ age+jobclass+education+health_ins+
maritl + race +year + health,data=Wage,method="lm")
finModAll <- modFitAll$finalModel
ggplot(aes(1:length(finModAll$residuals), finModAll$residuals), data = NULL) +
geom_point(pch = 19)
dim(training); dim(testing)
training <- Wage[inTrain,] %>% arrange(age)
testing <- Wage[-inTrain,]
dim(training); dim(testing)
(modfit <- train(wage ~ age+jobclass+education+health_ins, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(education)
testing <- Wage[-inTrain,]
dim(training); dim(testing)
(modfit <- train(wage ~ age+jobclass+education+health_ins, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
names(training)
training <- Wage[inTrain,] %>% arrange(health_ins)
testing <- Wage[-inTrain,]
dim(training); dim(testing)
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_jitter(pch = 19)
training <- Wage[inTrain,] %>% arrange(wage)
testing <- Wage[-inTrain,]
dim(training); dim(testing)
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_jitter(pch = 19)
?geom_jitter
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_jitter(width = 0.25, pch = 19)
training <- Wage[inTrain,] %>% arrange(age)
testing <- Wage[-inTrain,]
dim(training); dim(testing)
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_jitter(width = 0.25, pch = 19)
training <- Wage[inTrain,] %>% arrange(eduaction)
testing <- Wage[-inTrain,]
dim(training); dim(testing)
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_jitter(width = 0.25, pch = 19)
training <- Wage[inTrain,] %>% arrange(health_ins)
testing <- Wage[-inTrain,]
dim(training); dim(testing)
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
training <- Wage[inTrain,] %>% arrange(wage)
testing <- Wage[-inTrain,]
dim(training); dim(testing)
(modfit <- train(wage ~ age+jobclass+education, method = "lm", data=training))
finMod <- modfit$finalModel
ggplot(aes(1:length(finMod$residuals), finMod$residuals, col = training[,1]), data = NULL) +
geom_point(pch = 19)
library(dplyr)
library(caret)
library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]training = adData[inTrain,]
inTrain <- createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[inTrain,]
testing <- adData[-inTrain,]
names(training)
grep("IL", names(training))
names(training)[grep("IL", names(training))]
cols <- c("diagnostic", names(training)[grep("IL", names(training))])
cols
subTrain <- training[, cols]
cols <- c(1, grep("IL", names(training)))
subTrain <- training[, cols]
train(diagnosis ~ ., data = subTrain)
?train
train(diagnosis ~ ., data = subTrain, method = "lm")
train(diagnosis ~ ., data = subTrain, method = "glm")
modelfit <-train(diagnosis ~ ., data = subTrain, method = "glm")
confusionMatrix(testing, predict(modelfit, testing))
confusionMatrix(testing$diagnosis, predict(modelfit, testing))
confusionMatrix(testing$diagnosis, predict(modelfit, predict(preProc, testing)))
preProc <- preProcess(subTrain[,-1], method = "pca")
confusionMatrix(testing$diagnosis, predict(modelfit, predict(preProc, testing)))
modelfit <-train(diagnosis ~ ., data = predict(preProc, subTrain), method = "glm")
confusionMatrix(testing$diagnosis, predict(modelfit, predict(preProc, testing)))
subTrain %>% names
cols <- c(1, grep("^IL", names(training)))
subTrain <- training[, cols]
cols <- c(1, grep("^IL", names(training)))
subTrain %>% names
modelfit <-train(diagnosis ~ ., data = subTrain, method = "glm")
confusionMatrix(testing$diagnosis, predict(modelfit, testing))
preProc <- preProcess(subTrain[,-1], method = "pca")
modelfit <-train(diagnosis ~ ., data = predict(preProc, subTrain), method = "glm")
confusionMatrix(testing$diagnosis, predict(modelfit, predict(preProc, testing)))
logicalTrain <- grepl('^IL.*|diagnosis', colnames(training))
logicalTrain
subTrainSet
subTrainSet <- training[,logicalTrain]
names(subTrainSet)
subTrain %>% names
subTest <- testing[,cols]
modelfit <-train(diagnosis ~ ., data = subTrain, method = "glm")
confusionMatrix(subTest$diagnosis, predict(modelfit, subTest))
modelFit <- train(diagnosis ~ ., method = 'glm', data = subTrainSet)
# Here I check the accuracy on the test-set:
confusionMatrix(subTestSet$diagnosis, predict(modelFit, subTestSet))
logicalTest <- grepl('^IL.*|diagnosis', colnames(testing))
subTrainSet <- training[,logicalTrain]
subTestSet <- training[,logicalTest]
modelFit <- train(diagnosis ~ ., method = 'glm', data = subTrainSet)
# Here I check the accuracy on the test-set:
confusionMatrix(subTestSet$diagnosis, predict(modelFit, subTestSet))
subTrain <- training[, cols]
subTest <- testing[,cols]
modelfit <-train(diagnosis ~ ., data = subTrain, method = "glm")
confusionMatrix(subTest$diagnosis, predict(modelfit, subTest))
subTrainSet <- training[,logicalTrain]
subTestSet <- training[,logicalTest]
modelFit <- train(diagnosis ~ ., method = 'glm', data = subTrainSet)
# Here I check the accuracy on the test-set:
confusionMatrix(subTestSet$diagnosis, predict(modelFit, subTestSet))
modelfit
(modelfit <-train(diagnosis ~ ., data = subTrain, method = "glm"))
modelFit <- train(diagnosis ~ ., method = "glm", data = subTrainSet)
(modelFit <- train(diagnosis ~ ., method = "glm", data = subTrainSet))
set.seed(3433)
(modelfit <-train(diagnosis ~ ., data = subTrain, method = "glm"))
set.seed(3433)
(modelFit <- train(diagnosis ~ ., method = "glm", data = subTrainSet))
confusionMatrix(testing$diagnosis, predict(modelfit, predict(preProc, testing)))
confusionMatrix(subTest$diagnosis, predict(modelfit, subTest))
confusionMatrix(subTestSet$diagnosis, predict(modelFit, subTestSet))
dim(subTest)
dim(subTestSet)
subTestSet <- testing[,logicalTest]
(modelFit <- train(diagnosis ~ ., method = "glm", data = subTrainSet))
# Here I check the accuracy on the test-set:
confusionMatrix(subTestSet$diagnosis, predict(modelFit, subTestSet))
3/10/(2/10+1)
1-0.3
0.7*0.3
ln(0.21)
log(0.21)
(1-0.3)/0.3
log/2((1-0.3)/0.3)
log((1-0.3)/0.3)
log((1-0.3)/0.3)/2
shiny::runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
?summary
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
runApp('Coursera/Shiny/CourseraAssignment')
setwd("C:\\Users\\Daniel\\Documents\\Coursera\\Slidify")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
install.packages("devtools")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
install.packages("knitr")
install_github('slidify', 'ramnathv')
install.packages("stringi")
getwd()
install_github('slidify', 'ramnathv')
library(devtools)
install_github('slidify', 'ramnathv')
author("DFA_Coursera")
library(slidify)
author("DFA_Coursera")
